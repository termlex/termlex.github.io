{"name":"Termlex","tagline":"Simplifying SNOMED CT implementation","body":"## Termlex\r\nTermlex is a modular, service oriented API for SNOMED CT\r\n\r\n#### Authors\r\n  * Jay Kola\r\n\r\n#### License\r\n  * [Noesis Informatica License](https://noesisinformatica.com/licenses/LICENSE-1.0.txt)\r\n\r\nBuild Instructions\r\n------------------\r\n```\r\ngit clone https://github.com/termlex/termlex.git\r\n// -- see note below about config folder\r\nmvn clean package -Pjar\r\n```\r\nThis creates a zip file at `target\\staging\\Termlex.zip`. \r\n\r\n#### How to use\r\n1. Extract the `Termlex.zip` to a folder where you have read and write permissions.\r\n2. Verify the entries in `snomed-db.properties` to match your MySQL database that contains SNOMED CT data.\r\n3. Set database connection properties in `termlogic-server.properties` for Termlex to store data. You can also edit this file to change the port that Termlex runs on.\r\n4. Start Termlex using the `run.sh` or `run.bat` files in the folder.\r\n\r\n### Configuration Folder\r\nTermlex services can be configured using property files. Default values for the services are included in the jar \r\nfiles. However, it is possible to override the default values by providing property files for each of the services. \r\nTermlex has a default configuration folder called `config` located in the folder it is extracted.\r\nThe following is a list of property files that can be used to configure services:\r\n\r\n|File name | Description | Termlex deployment location |\r\n|:------------- |:-------------:|:-----|\r\nsnomed-db.properties | Settings to configure the database that contains SNOMED CT data | /opt/termlex/config |\r\ntermlogic-server.properties | Settings to configure the port number and database details used by Termlex | /opt/termlex/config |\r\nobj-snomed-db.properties | Settings to configure database that stores Termlex managed local extensions |  /opt/termlex/config |\r\nconverters.properties | Settings that are used by Termlex to generate human readable versions of expressions |  /opt/termlex/config |\r\nrefset-db.properties | Settings to configure the database that contains refset data |  /opt/termlex/config |\r\n\r\nTesting Instructions\r\n--------------------\r\nTo run unit tests use: \r\n```\r\nmvn clean test\r\n```\r\n\r\nSome tests in Termlex are currently written as integration tests. Integration tests expect an actual MySQL SNOMED CT \r\ndatabase that contains SNOMED CT data. To run integration tests use: \r\n```\r\nmvn clean integration-test -Dskip.integration.tests=false\r\n```\r\n\r\n### Looking for source code?\r\nIf you are using Termlex, you can access the source code at: [https://gitlab.com/noesisinformatica/termlex](https://gitlab.com/noesisinformatica/termlex)\r\n\r\n### Want to learn how it can be used?\r\nIf you'd like to see what Termlex can do, then you can check out [Snolex](https://snolex.com) the SNOMED CT browser and refset manager powered by Termlex.\r\n\r\n### Support or Contact\r\nInterested in using Termlex or having trouble with Termlex? You can [contact support](https://noesisinformatica.com/contact/) and weâ€™ll help you sort it out.\r\n\r\nHappy Hacking!","google":"UA-29598083-1","note":"Don't delete this file! It's used internally to help with page regeneration."}